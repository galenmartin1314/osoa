<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!-- 开启注解自动扫描 -->
    <context:annotation-config  />
    
    <!-- MybatisDao基类配置进来，以便Service类可以用注解的方式引入，然后就是扫描包路径，不扫描带有@Controller注解的类 -->
    <context:component-scan base-package="com.gm.osoa.orm.mybatis">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 强制使用CGLIB代理  -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- JDBC数据源配置 -->
	<!-- 配置连接池 c3p0连接池
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
	</bean>
	-->
	<!-- apache dbcp连接池配置
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="initialSize" value="${dbcp.initialSize}"/>
	</bean>
	-->
	<!-- BoneCP配置 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriodInMinutes}"/>
		<property name="idleMaxAgeInMinutes" value="${bonecp.idleMaxAgeInMinutes}"/>
		<property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}"/>
		<property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}"/>
		<property name="partitionCount" value="${bonecp.partitionCount}"/>
		<property name="acquireIncrement" value="${bonecp.acquireIncrement}"/>
		<property name="statementsCacheSize" value="${bonecp.statementsCacheSize}"/>
		<property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}"/>
		<property name="poolAvailabilityThreshold" value="${bonecp.poolAvailabilityThreshold}"/>
	</bean>
	<!-- 配置sessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/gm/osoa/orm/mybatis/mapper/*.xml" />
	</bean>
	
	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	
	<!--事务管理DataSourceTransactionManager-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	<!--启动spring注解功能-->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
             <tx:method name="select*" read-only="true" propagation="REQUIRED" />
            <tx:method name="find*" read-only="true" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
            <tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
            <tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务的切入点 -->
    <aop:config>
        <aop:pointcut id="targetMethod" expression="execution(* com.gm.osoa.ibatis.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="targetMethod" />
    </aop:config>
     <!-- 配置映射器Mybatis Mapper，所有的Mapper接口继承BaseMapper --> 
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.gm.osoa.orm.mybatis.dao" />
    </bean>
    
    <!-- 配置映射器Mybatis Mapper ,实际Mapper配置  -->
    <!-- <bean id="mapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
        <property name="mapperInterface" value="com.gm.osoa.orm.mybatis.dao.BaseMapper" />  
        <property name="sqlSessionFactory" ref="sessionFactory" />  
    </bean> -->
</beans>